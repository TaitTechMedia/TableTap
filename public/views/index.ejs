<!DOCTYPE html>
<html>
<head>
  <title>TableTap</title>
  <link rel="stylesheet" type="text/css" href="/styles.css">
  <link rel="manifest" href="/manifest.json">
<script>
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/service-worker.js')
      .then((registration) => {
        console.log('Service Worker registered');
      })
      .catch((error) => {
        console.error('Error registering Service Worker:', error);
      });
  }
</script>
</head>
<body>
  <div class="title">TableTap</div>

  <div class="search-bar">
    <input id="search-input" type="text" placeholder="Search...">
  </div>

  <div class="board-container">
    <% boardImages.forEach(({ image, modalContent }) => {
  const fileName = image.slice(image.lastIndexOf('/') + 1, image.lastIndexOf('.'));
  %>
      <div class="board" data-modal='<%- JSON.stringify(modalContent) %>'>
        <img src="/boards/<%= image %>" alt="Board Image" />
        <span class="file-name"><%= fileName %></span>
      </div>
    <% }); %>
  </div>

  <div id="back-button" class="back-button">
    <img src="/resources/back-button.svg" alt="Back Button" width="75px" height="75px">
  </div>

  <!-- Add the popup modal -->
  <div id="game-modal" class="game-modal">
    <img src="/resources/game-modal.svg" alt="Game Modal" width="75px" height="75px">
  </div>

  <!-- Add the modal content -->
<div id="modal-content" class="modal">
  <h2 id="modal-title">Popup Modal</h2>
  <p id="modal-description">This is a popup modal in the center of the screen.</p>
</div>

  <script>
    const boards = document.querySelectorAll('.board');
    const searchInput = document.getElementById('search-input');
    let timeout;
    let isFullScreen = false;
    let fullScreenBoard = null;

    function filterBoards() {
      const searchText = searchInput.value.toLowerCase();
      boards.forEach(board => {
        const boardName = board.querySelector('.file-name').textContent.toLowerCase();
        if (boardName.includes(searchText)) {
          board.style.display = 'block';
        } else {
          board.style.display = 'none';
        }
      });
    }

    searchInput.addEventListener('input', () => {
      clearTimeout(timeout);
      timeout = setTimeout(filterBoards, 300);
    });

    boards.forEach(board => {
      board.addEventListener('click', () => {
        if (isFullScreen) {
          fullScreenBoard.remove();
          document.getElementById('back-button').classList.remove('show');
          document.getElementById('game-modal').classList.remove('show');
          clearTimeout(timeout);
          isFullScreen = false;
        } else {
          fullScreenBoard = board.cloneNode(true);
          fullScreenBoard.classList.add('full-screen');
          fullScreenBoard.querySelector('.file-name').style.display = 'none';
          document.body.appendChild(fullScreenBoard);
          document.getElementById('back-button').classList.add('show');
          document.getElementById('game-modal').classList.add('show');
          isFullScreen = true;
        }
      });
    });

    document.getElementById('back-button').addEventListener('click', () => {
      if (isFullScreen) {
        fullScreenBoard.remove();
        document.getElementById('back-button').classList.remove('show');
        document.getElementById('game-modal').classList.remove('show');
        clearTimeout(timeout);
        isFullScreen = false;
      }
    });

  const modal = document.getElementById('game-modal');
  const modalContent = document.getElementById('modal-content');
  const modalTitle = document.getElementById('modal-title');
  const modalDescription = document.getElementById('modal-description');

  // Show the popup modal
  modal.addEventListener('click', (event) => {
    event.stopPropagation(); // Prevent dismissing when clicking inside the modal
    modalContent.classList.add('show');
  });

  // Close the popup modal when clicking outside
  window.addEventListener('click', (event) => {
    if (!modalContent.contains(event.target)) {
      modalContent.classList.remove('show');
    }
  });

  // Update modal content based on the current board
  boards.forEach(board => {
    board.addEventListener('click', () => {
      if (!modalContent.classList.contains('show')) {
        const modalData = JSON.parse(board.dataset.modal);
        modalTitle.textContent = modalData.title;
        modalDescription.textContent = modalData.description;
      }
    });
  });
  </script>
</body>
</html>